name: CI/CD with Docker

on:
  push:
    branches: ['production']
  pull_request:
    branches: ['production']
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Docker 로그인
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/sprit:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/sprit:latest

      # 4. SSH를 통해 Lightsail 서버로 배포
      - name: Deploy to Lightsail via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # 기존 컨테이너 강제 중지 및 제거
            docker stop sprit || true
            docker rm -f sprit || true

            # 최신 Docker 이미지 가져오기
            docker pull ${{ secrets.DOCKER_USERNAME }}/sprit:latest

            # 새로운 컨테이너 실행
            docker run -d --name sprit \
              -p 3000:3000 \
              --env-file /home/ubuntu/.env \
              --restart always \
              ${{ secrets.DOCKER_USERNAME }}/sprit:latest
